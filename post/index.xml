<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hugo tranquilpeak theme</title>
    <link>/post/</link>
    <description>Recent content in Posts on Hugo tranquilpeak theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr</language>
    <lastBuildDate>Sun, 09 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Contents is King by Bill Gates 전문 번역</title>
      <link>/2017/07/contents-is-king-by-bill-gates-%EC%A0%84%EB%AC%B8-%EB%B2%88%EC%97%AD/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/contents-is-king-by-bill-gates-%EC%A0%84%EB%AC%B8-%EB%B2%88%EC%97%AD/</guid>
      <description>&lt;p&gt;1996년 1월 3일에 쓰여진 글입니다.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>스트라티스 qt월렛 리눅스에서 빌드하기</title>
      <link>/2017/05/%EC%8A%A4%ED%8A%B8%EB%9D%BC%ED%8B%B0%EC%8A%A4-qt%EC%9B%94%EB%A0%9B-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/</link>
      <pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/%EC%8A%A4%ED%8A%B8%EB%9D%BC%ED%8B%B0%EC%8A%A4-qt%EC%9B%94%EB%A0%9B-%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;코인을 거래소에 두는건 위험합니다. 해커들이 호시탐탐 노리고있으며 거래소가 먹튀할 확률도 있습니다.
소중한 스트라티스를 개인지갑에 소중히 보관하고자 하는 취지에서 이번글을 작성해 봅니다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jekyll github blog gemfile 버전 에러</title>
      <link>/2016/11/jekyll-github-blog-gemfile-%EB%B2%84%EC%A0%84-%EC%97%90%EB%9F%AC/</link>
      <pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/jekyll-github-blog-gemfile-%EB%B2%84%EC%A0%84-%EC%97%90%EB%9F%AC/</guid>
      <description>&lt;p&gt;이런 에러가 났다. config파일을 바꿔보고 루비와 jekyll을 지웠다 다시 깔아보고 했지만 모두 실패함.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python에서 postgres DB 연결해서 쿼리 조회하기</title>
      <link>/2016/11/python%EC%97%90%EC%84%9C-postgres-db-%EC%97%B0%EA%B2%B0%ED%95%B4%EC%84%9C-%EC%BF%BC%EB%A6%AC-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/python%EC%97%90%EC%84%9C-postgres-db-%EC%97%B0%EA%B2%B0%ED%95%B4%EC%84%9C-%EC%BF%BC%EB%A6%AC-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;2번 방법을 추천한다. 이유는 아래에서.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Welcome to Tranquilpeak 0.4.2-BETA</title>
      <link>/2015/06/welcome-to-tranquilpeak-0.4.2-beta/</link>
      <pubDate>Mon, 15 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/06/welcome-to-tranquilpeak-0.4.2-beta/</guid>
      <description>&lt;p&gt;Tranquilpeak is a gorgeous responsive theme for Hugo blog framework. It has many features and integrated services to improve user experience.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Elements showcase</title>
      <link>/2015/05/elements-showcase/</link>
      <pubDate>Thu, 28 May 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/05/elements-showcase/</guid>
      <description>&lt;p&gt;Check out how Tranquilpeak theme display well HTML elements (title, paragraph, blockquote, table and more..). It&amp;rsquo;s simple and elegant.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cover image showcase</title>
      <link>/2015/05/cover-image-showcase/</link>
      <pubDate>Wed, 13 May 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/05/cover-image-showcase/</guid>
      <description>&lt;p&gt;Tranquilpeak integrate a unique &amp;ldquo;cover image&amp;rdquo; feature. Open this post to see how this feature sublimate your article.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>highlighted code showcase</title>
      <link>/2015/03/highlighted-code-showcase/</link>
      <pubDate>Mon, 23 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/03/highlighted-code-showcase/</guid>
      <description>&lt;p&gt;Tranquilpeak Hugo theme have its own theme to highlight source code. It&amp;rsquo;s based on GitHub theme: simple and elegant. Check out how it sublimate source codes.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tags plugins showcase</title>
      <link>/2014/10/tags-plugins-showcase/</link>
      <pubDate>Wed, 29 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/10/tags-plugins-showcase/</guid>
      <description>&lt;p&gt;This post is used to show how tag plugins are displayed. See &lt;a href=&#34;https://github.com/kakawait/hugo-tranquilpeak-theme/blob/master/docs/user.md#tags&#34;&gt;docs&lt;/a&gt; for more info.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hidden social section showcase</title>
      <link>/2014/08/hidden-social-section-showcase/</link>
      <pubDate>Sun, 17 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/08/hidden-social-section-showcase/</guid>
      <description>&lt;p&gt;This post is used to show how a site looks if the social section is hidden.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hidden tag section showcase</title>
      <link>/2014/08/hidden-tag-section-showcase/</link>
      <pubDate>Sat, 16 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/08/hidden-tag-section-showcase/</guid>
      <description>&lt;p&gt;This post is used to show how a site looks if the tag section is hidden.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hidden pagination showcase</title>
      <link>/2014/08/hidden-pagination-showcase/</link>
      <pubDate>Fri, 15 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/08/hidden-pagination-showcase/</guid>
      <description>&lt;p&gt;This post is used to show how a site looks if the pagination is hidden.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Video integrations showcase</title>
      <link>/2014/08/video-integrations-showcase/</link>
      <pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/08/video-integrations-showcase/</guid>
      <description>&lt;p&gt;Youtube and Vimeo videos are easily integrated thanks to tags plugins. Of course, you can add video other platforms like dailymotion.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>中文測試</title>
      <link>/2013/10/chinese-test/</link>
      <pubDate>Wed, 02 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/10/chinese-test/</guid>
      <description>&lt;p&gt;This is a chinese test post to show you how chinese is displayed.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Image gallery showcase</title>
      <link>/2013/02/image-gallery-showcase/</link>
      <pubDate>Mon, 18 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/02/image-gallery-showcase/</guid>
      <description>&lt;p&gt;And here is the image gallery!
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日本語テスト</title>
      <link>/2013/01/japanese-test/</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/01/japanese-test/</guid>
      <description>&lt;p&gt;This is a Japanese test post to show you how japanese is displayed.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/</guid>
      <description>안녕하세요. 이번글에선 OTP앱인 Authy를 소개드리고자 합니다.
가상화폐 투자하시는 분들에겐 OTP는 필수입니다. 거래소 아이디와 비밀번호를 복잡하게 지정해두더라도 해커들 앞에선 더이상 안전하지 않습니다. 본인의 자산은 본인이 지켜야 합니다.
많은 분들이 Google OTP를 사용하고 계실텐데요, 저는 이 글에서 Authy라는 OTP앱을 추천하려고 합니다. 저 역시 Authy를 통해 거의 모든 OTP를 관리하고 있습니다. Poloniex, bittrex, 코인원등의 거래소뿐만 아니라 google계정, dropbox, facebook등 다른 사이트들 까지도요. 구글 OTP도 충분히 훌륭한 앱입니다. 다만 Authy가 더 훌륭할 뿐이죠. 그 이유를 말씀드리겠습니다.</description>
    </item>
    
    <item>
      <title></title>
      <link>/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/</guid>
      <description>안녕하세요.
지난글에서 지갑을 무사히 설치했다면 이번글에선 지갑을 백업하는법을 알아보겠습니다. 지갑을 무사히 설치하였더라도, 만일의 사태는 발생할 수 있습니다. 지갑이 설치된 컴퓨터가 파손된다면 어떻게 할건가요?
이럴때를 대비해 지갑을 백업해둬야만 합니다. 관리부주의로 가상화폐의 소유권을 잃어버릴수도 있습니다. 이 글을 읽으시는 분들도 반드시 백업파일을 만들어두시길 바랍니다.
백업방법 1 - 간단하게 파일 -&amp;gt; 지갑 백업을 통해 백업 파일을 만들 수 있습니다.
- 원하는 경로에 원하는 이름으로 백업 파일을 만들수 있습니다. - 이름은 원하는대로 설정 가능하지만 일반적으로는 wallet으로 하는걸 추천드립니다.</description>
    </item>
    
    <item>
      <title>apache zeppelin에 postgres DB 연결하기</title>
      <link>/1/01/apache-zeppelin%EC%97%90-postgres-db-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/apache-zeppelin%EC%97%90-postgres-db-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</guid>
      <description>
 제플린 빌드 후 오른쪽 상단에서 Interpreter 클릭  
 jdbc에서 DB 정보 입력
 common.max_count: 한번에 몇개의 row를 조회할 것인지 설정
 default.driver: org.postgresql.Driver
 default.password: DB 패스워드
 default.url: DB 주소. jdbc:postgresql://DNS_ADDRESS:PORT/DBNAME 형태로 입력.
 default.user: DB user name 입력
  
 notebook에서 첫줄에 %jdbc입력 후 테스트 쿼리를 날려보면 잘 되는걸 확인 할 수 있다.  </description>
    </item>
    
    <item>
      <title>apache zeppelin의 dynamic form 정리</title>
      <link>/1/01/apache-zeppelin%EC%9D%98-dynamic-form-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/apache-zeppelin%EC%9D%98-dynamic-form-%EC%A0%95%EB%A6%AC/</guid>
      <description>참조. http://zeppelin.apache.org/docs/0.6.2/manual/dynamicform.html
  dynamic form을 이용하면 충분히 쓸만한 custom dashboard를 만들 수 있다.  1. Text input form 
&amp;nbsp;
 기본 형태: ${formName} default value 지정 형태: ${formName=defaultValue}  기본값을 지정하는 경우 첫 실행시 default value로 input이 들어가서 실행된다.   2. Select form 
&amp;nbsp;
 기본 형태: ${formName=,option1|option2...} default value 지정 형태: ${formName=defaultValue,option1|option2...} 선택값과 출력값을 다르게 지정한 형태: ${formName=defaultValue,option1(DisplayName)|option2(DisplayName)...}  3. Checkbox form  쿼리 사용할 때 유용하다.</description>
    </item>
    
    <item>
      <title>appsflyer pull api를 이용해 daily report 적재하기</title>
      <link>/1/01/appsflyer-pull-api%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-daily-report-%EC%A0%81%EC%9E%AC%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/appsflyer-pull-api%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-daily-report-%EC%A0%81%EC%9E%AC%ED%95%98%EA%B8%B0/</guid>
      <description>참조: appsflyer pull api 가이드
 push api가 아닌 pull api를 사용하는 이유.
 앱스플라이어 이벤트를 많이 정의할수록 push api가 빈번하게 호출된다. 이는 서비스 품질 저하로 이어질 수 있음. (완벽한 분석용 DB가 따로 구축되어 있다면 상관 없다.) 그러므로 실시간 데이터 적재보다는 하루에 한번, 전일자 데이터를 적재하기로 결정했고 이런 용도에는 pull api가 적합하다.  product와 archive에 동시에 적재하는 이유.
 앱스플라이어에서 데이터를 무한정 제공하진 않는다. 가입한 플랜에 따라 최근 x일자 데이터만 조회가 가능하다.</description>
    </item>
    
    <item>
      <title>appsflyer pull api를 이용해 raw data 적재하기</title>
      <link>/1/01/appsflyer-pull-api%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-raw-data-%EC%A0%81%EC%9E%AC%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/appsflyer-pull-api%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-raw-data-%EC%A0%81%EC%9E%AC%ED%95%98%EA%B8%B0/</guid>
      <description>참조: appsflyer pull api 가이드
 push api가 아닌 pull api를 사용하는 이유.
 앱스플라이어 이벤트를 많이 정의할수록 push api가 빈번하게 호출된다. 이는 서비스 품질 저하로 이어질 수 있음. (완벽한 분석용 DB가 따로 구축되어 있다면 상관 없다.) 그러므로 실시간 데이터 적재보다는 하루에 한번, 전일자 데이터를 적재하기로 결정했고 이런 용도에는 pull api가 적합하다.  product와 archive에 동시에 적재하는 이유.
 앱스플라이어에서 데이터를 무한정 제공하진 않는다. 가입한 플랜에 따라 최근 x일자 데이터만 조회가 가능하다.</description>
    </item>
    
    <item>
      <title>github.io 블로그를 만들어 보자</title>
      <link>/1/01/github.io-%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%9E%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/github.io-%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%9E%90/</guid>
      <description>github page는 무엇인가? https://pages.github.com/ 는 깃허브에서 다이렉트로 호스팅해주는 서비스이다. 무료이다. 단 깃허브 계정 하나에 한 페이지만 만들 수 있다. 개발자들은 주로 포트폴리오나 cv, 또는 개인 블로그로 사용하고있다. 내 블로그인 sanghun.xyz도 깃허브 리포지터리를 이용한 페이지이다. 도메인은 aws에서 구매해 연결했다.
참조 나는 codecademy의 deploy-a-website를 따라해서 만들었다. 쉽고 친절한 수업이라 따라만 해도 쉽게 웹사이트를 배포할 수 있다. 물론 배포까지만! 그 다음은 개인의 웹개발 역량에 달려있다. 나는 괜찮아보이는 공개 theme를 가져다 썼다. 아래의 방법은 codecademy의 수업을 요약한 것이다.</description>
    </item>
    
    <item>
      <title>macOS Sierra에서 virtualenv에 Opencv3 설치</title>
      <link>/1/01/macos-sierra%EC%97%90%EC%84%9C-virtualenv%EC%97%90-opencv3-%EC%84%A4%EC%B9%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/macos-sierra%EC%97%90%EC%84%9C-virtualenv%EC%97%90-opencv3-%EC%84%A4%EC%B9%98/</guid>
      <description>python3 설치  간단하게 brew로 설치하자  brew install python3  opencv3 설치  3은 아직 베타라고 한다. 안전한 버전을 원하면 opencv2를 설치하자. 나는 그냥 3설치 했다.  brew tap homebrew/science brew install opencv3 --with-python3 --with-ffmpeg --with-tbb --with-contrib  2016.12.04 임시 설치법  현재 mac OS Sierra에서 Opencv 설치에 문제가 있다. &amp;ndash;HEAD를 추가해 아래 방법대로 하면 된다. (16.12.4 기준) https://github.com/Homebrew/homebrew-science/issues/4104#issuecomment-249362870  brew install opencv3 --HEAD --with-python3 --with-ffmpeg --with-tbb --with-contrib  lookup 만들어주기  Ln -s {opencv의 site-packages} {사용하는 python환경의 site-packages} 형태로 lookup을 만들어 준다.</description>
    </item>
    
  </channel>
</rss>